#read in dataset
library(tidyverse)
library(lubridate)
#install.packages("texter")
library(texter)
library(jsonlite)

#Combine google and apple datasets
Appstore <- read.csv("Data/AppStoreReviews.csv")




dict_to_df = function(dict) {
  
  require(plyr)
  df = data.frame()
  df_temp = list()
  store = list()
  
  for (i in 1:length(dict)) {
    
    # Split up the dictionary entry
    split = unlist(strsplit(dict[i], '\",'))
    split = gsub('\\{', '', split)
    split = gsub('\\}', '', split)
    values = unlist(strsplit(split, ':'))
    
    # Parse out what will be the df headers
    headers = values[seq(1, length(values), 2)]       
    headers = gsub('\"', '', headers) # Remove quotes
    headers = gsub(' ', '', headers)  # and whitespace
    
    # Parse out what will be the df values
    row_values = values[seq(0, length(values), 2)]
    row_values = gsub('\"', '', row_values) # Remove quotes
    row_values = gsub(' ', '', row_values)  # and whitespace
    
    # Construct a dataframe with 1 row
    out = data.frame(t(row_values))
    colnames(out) = headers
    
    store[i] = list(out)
    
    if (i %% 1000 == 0) { print(round(i / length(dict), 2)) }
    
  }
  
  # rbind all the dataframes together into one dataframe 
  list_length = length(store)
  
  # If the dictionary is sufficiently large rbind will be slow
  # as all hell, so break the rbinding into multiple steps
  if (list_length >= 3000) {
    
    no_splits = round(list_length / 500)
    chunks = split(store, 1:no_splits)
    
    for (j in 1:no_splits) {
      
      df_temp[j] = list(rbind.fill(chunks[[j]]))
      
    }
    df = rbind.fill(df_temp)
    return(df)
  }
  
  else {
    
    df = rbind.fill(store)
    return(df)
  }
  
}

r_df = dict_to_df(gsub("'", "", Appstore$developerResponse))
stringi::stri_extract_all_regex(Appstore$developerResponse, '(?<=").*?(?=")')

fromJSON(toJSON(Appstore$developerResponse), flatten = T)

(Appstore$developerResponse)
json_file <- fromJSON(Appstore$developerResponse, flatten = T)

json_file <- lapply(Appstore$developerResponse, function(x) {
  x[sapply(x, is.null)] <- NA
  unlist(x)
})


list(Appstore$developerResponse)

(Appstore$developerResponse) %>%
  unlist()

json_file
sample.df$json_col<- as.character(sample.df$json_col)
json_obj<- paste(sample.df$json_col, collapse = "")
json_obj<- stri_replace_all_fixed(json_obj, "][", ",")

library(stringi)

test <- Appstore %>%
  mutate(developerResponse = as.character(developerResponse)) %>%
  mutate(developerResponse = paste(developerResponse, collapse = "")) %>%
  mutate(developerResponse = stri_replace_all_fixed(developerResponse, "][", ","))

library(jsonlite)
test <- Appstore %>%
  mutate(developerResponse = toJSON(developerResponse)) %>%
  mutate(
    json_parsed = map(developerResponse, ~ fromJSON(., flatten=TRUE))
  ) %>%
  unnest(json_parsed)

#rm(test)
fromJSON(gsub(",", "", paste0('[',toString(head(Appstore$developerResponse)),']')))
